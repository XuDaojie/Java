<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
    version="3.1">

    <!-- 配置Spring start -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--contextConfigLocation在 ContextLoaderListener类中的默认值是 /WEB-INF/applicationContext.xml-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/applicationContext.xml</param-value>
    </context-param>
    <!-- 配置Spring end -->

    <!-- Spring MVC start-->
    <!-- 所有以springMVC开头的请求都会被DispatcherServlet处理 -->
    <servlet>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--
            init-param 参数 contextConfigLocation 用来指定 Spring 的配制文件, classpath: 是指 WEB-INF/classes 目录
            这个参数也可以不指定，如果不指定，spring 默认查找 WEB-INF/classes/<servlet-name>-servlet.xml 的文件。
        -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springMVC-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!-- Spring MVC end-->

    <filter>
        <filter-name>mFilterFirst</filter-name>
        <filter-class>com.xdj.javaee.filter.FirstFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>mFilterFirst</filter-name>
        <url-pattern>*</url-pattern>
        <!--<url-patterspringMVC.jsp</url-pattern>-->
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <servlet>
        <servlet-name>StartUpServlet</servlet-name>
        <servlet-class>com.xdj.javaee.servlet.StartUpServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>StartUpServlet</servlet-name>
        <url-pattern>/startupservlet</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>HelloServlet</servlet-name>
        <servlet-class>com.xdj.javaee.servlet.HelloServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>HelloServlet</servlet-name>
        <url-pattern>/helloservlet</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>mLogin</servlet-name>
        <servlet-class>com.xdj.javaee.servlet.LoginServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>mLogin</servlet-name>
        <url-pattern>/login</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>mRegister</servlet-name>
        <servlet-class>com.xdj.javaee.servlet.RegisterServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>mRegister</servlet-name>
        <url-pattern>/register.do</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>mMybatisLogin</servlet-name>
        <servlet-class>com.xdj.javaee.servlet.MyBatisLoginServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>mMybatisLogin</servlet-name>
        <url-pattern>/mybatisLogin</url-pattern>
    </servlet-mapping>

    <listener>
        <listener-class>com.xdj.javaee.listener.FirstListener</listener-class>
    </listener>

    <error-page>
        <error-code>404</error-code>
        <location>/404.html</location>
    </error-page>
</web-app>